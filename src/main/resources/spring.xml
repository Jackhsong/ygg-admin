<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
				         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				         http://www.springframework.org/schema/context
				         http://www.springframework.org/schema/context/spring-context-3.0.xsd
				         http://www.springframework.org/schema/tx
				         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				         http://www.springframework.org/schema/aop 
				         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <context:component-scan base-package="com.ygg.admin.dao,com.ygg.admin.service"/>
	
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<!-- 文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
<!--     	允许文件上传的最大字节数，如果是多文件上传的话，表示的总文件的大小  
    	<property name="maxUploadSize" value="900000"/>  
    	文件默认的编码   -->
    	<property name="defaultEncoding" value="UTF-8"/>  
	</bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
        <!-- 基本属性 url、user、password -->  
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="jdbc:mysql://zuoan2016.mysql.rds.aliyuncs.com:3306/sale_platform?useUnicode=true&amp;characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true" />  
        <property name="username" value="fsafgasag" />  
        <property name="password" value="Gsdg52Gsdg52" />  
        <!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize" value="5" />
        <property name="minIdle" value="5" />
        <property name="maxActive" value="20" />
        <!-- 配置获取连接等待超时的时间 -->  
        <property name="maxWait" value="60000" />  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="300000" />  
        <property name="validationQuery" value="SELECT 'x'" />  
        <property name="testWhileIdle" value="true" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
        <property name="poolPreparedStatements" value="true" />  
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
        <!--<property name="filters" value="stat" />-->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<property name="connectionProperties" value="druid.stat.mergeSql=true" />
    </bean>
    
    <bean id="dataSource_read" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->  
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="jdbc:mysql://zuoan2016.mysql.rds.aliyuncs.com:3306/sale_platform?useUnicode=true&amp;characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true" />  
        <property name="username" value="fsafgasag" />  
        <property name="password" value="Gsdg52Gsdg52" />  
        <!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize" value="10" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="25" />
        <!-- 配置获取连接等待超时的时间 -->  
        <property name="maxWait" value="60000" />  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="300000" />  
        <property name="validationQuery" value="SELECT 'x'" />  
        <property name="testWhileIdle" value="true" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
        <property name="poolPreparedStatements" value="true" />  
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
        <!--<property name="filters" value="stat" />-->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<property name="connectionProperties" value="druid.stat.mergeSql=true" />
    </bean>

    <bean id="dataSource_admin" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->  
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="jdbc:mysql://zuoan2016.mysql.rds.aliyuncs.com:3306/sale_platform?useUnicode=true&amp;characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true" />  
        <property name="username" value="fsafgasag" />  
        <property name="password" value="Gsdg52Gsdg52" />  
        <!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize" value="10" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="25"/>
        <!-- 配置获取连接等待超时的时间 -->  
        <property name="maxWait" value="60000" />  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="300000" />  
        <property name="validationQuery" value="SELECT 'x'" />  
        <property name="testWhileIdle" value="true" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
        <property name="poolPreparedStatements" value="true" />  
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
        <!--<property name="filters" value="stat" />-->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<property name="connectionProperties" value="druid.stat.mergeSql=true" />
    </bean>

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="2000" />
		<property name="logSlowSql" value="true" />
	</bean>

    <!-- 主库 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- <property name="configLocation" value="classpath:sqlMapConfig.xml"/> -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
		<property name="typeAliasesPackage" value="com.ygg.admin.entity" />  
	</bean>
	
	<!-- 读库 -->
	<bean id="sqlSessionFactory_read" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_read"/>
		<!-- <property name="configLocation" value="classpath:sqlMapConfig.xml"/> -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
		<property name="typeAliasesPackage" value="com.ygg.admin.entity" />  
	</bean>
	
	<!-- 分库 -->
	<bean id="sqlSessionFactory_admin" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_admin"/>
		<!-- <property name="configLocation" value="classpath:sqlMapConfig.xml"/> -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
		<property name="typeAliasesPackage" value="com.ygg.admin.entity" />  
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	
	<bean id="sqlSessionTemplateRead" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory_read"/>
	</bean>
	
	<bean id="sqlSessionTemplateAdmin" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory_admin"/>
	</bean>
	
	<bean id="kd100Service" class="com.ygg.admin.servlet.Kd100Service" />
	<bean id="kd8Service" class="com.ygg.admin.servlet.Kd8Service" />
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" >
					<constructor-arg index="0">           
						<value>UTF-8</value>
					</constructor-arg>
				</bean>
				<bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean id="formHttpMessageConverter" class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean id="sourceHttpMessageConverter" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean id="allEncompassingFormHttpMessageConverter" class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
    <bean id="saleWindowUpdateServiceJob" class="com.ygg.admin.time.SaleWindowUpdateServiceJob"/> 

	<!-- dataSource 事物配置 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="copy*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="overseasAllCan*" propagation="REQUIRED"/>
			<tx:method name="checkOrderExport*" propagation="REQUIRED"/>
			<tx:method name="send*" propagation="REQUIRED"/>
			<tx:method name="edit*" propagation="REQUIRED"/>
			<tx:method name="merge*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="add*"    propagation="REQUIRED"/>
			<tx:method name="set*"    propagation="REQUIRED"/>
			<tx:method name="register*"    propagation="REQUIRED"/>
			<tx:method name="generate*"    propagation="REQUIRED" />
			<tx:method name="return*"    propagation="REQUIRED" />
			<tx:method name="create*"    propagation="REQUIRED" />
			
			<tx:method name="execute*" propagation="REQUIRED"/>
			
			<tx:method name="move*" propagation="REQUIRED"/>
			<tx:method name="import*" propagation="REQUIRED"/>
			<tx:method name="filterRepeatArea" propagation="REQUIRED"/>
			<tx:method name="forSale" propagation="REQUIRED"/>
			<tx:method name="forAvailable" propagation="REQUIRED"/>
			<tx:method name="complain" propagation="REQUIRED"/>
			<tx:method name="deal*" propagation="REQUIRED"/>
			<tx:method name="send*" propagation="REQUIRED"/>
			<tx:method name="logisticsTimeOutComplain" propagation="REQUIRED"/>
			
			<tx:method name="query*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="view*" read-only="true"/>
			<tx:method name="list*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* com.ygg.admin.service..*.*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	
	
	<!-- dataSource_admin 事物配置  -->
	<bean id="txManagerAdmin" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_admin"/>
	</bean>
	
	<tx:advice id="txAdviceAdmin" transaction-manager="txManagerAdmin">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="copy*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="edit*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="add*"    propagation="REQUIRED"/>
			<tx:method name="set*"    propagation="REQUIRED"/>
			<tx:method name="import*" propagation="REQUIRED"/>
			
			<tx:method name="execute*" propagation="REQUIRED"/>
			<tx:method name="updateGroupProductCount" propagation="REQUIRES_NEW"/>
			
			
			<tx:method name="query*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="view*" read-only="true"/>
			<tx:method name="list*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* com.ygg.admin.service..*.*(..))" id="txPointcutAdmin"/>
		<aop:advisor advice-ref="txAdviceAdmin" pointcut-ref="txPointcutAdmin"/>
	</aop:config>

    <!-- spring 事务模板 -->
	<bean id="transactionTemplate"
		  class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="txManager"/>
	</bean>

	<!-- 项目启动是的init() 操作 -->
	<bean id="initLoadServlet" class="com.ygg.admin.servlet.InitServlet" init-method="initLoad"></bean>

	<import resource="classpath:shiro-spring.xml" />
	<import resource="classpath:quartz-spring.xml" />

</beans>
				         